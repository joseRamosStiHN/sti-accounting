name: Accounting CI/CD workflow

on:
  push:
    branches:
      - main
    paths:
      - 'accounting/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Create application.properties
        run: |
          echo "spring.datasource.url=${{ secrets.DATABASE_URL }}" >> src/main/resources/application.properties
          echo "spring.datasource.username=${{ secrets.DATABASE_USERNAME }}" >> src/main/resources/application.properties
          echo "spring.datasource.password=${{ secrets.DATABASE_PASSWORD }}" >> src/main/resources/application.properties
          echo "spring.jpa.hibernate.ddl-auto=${{ secrets.DATABASE_UPDATE }}" >> src/main/resources/application.properties
          echo "spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect" >> src/main/resources/application.properties
          echo "spring.jpa.show-sql=${{ secrets.DATABASE_SHOW_QUERY }}" >> src/main/resources/application.properties

      - name: Build with Maven
        run: mvn clean install

      - name: Rename Jar file
        run: mv ./target/*.jar ./target/accounting.jar

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Detener la aplicaci√≥n existente
            sudo systemctl stop accounting-service
            # Transferir el nuevo archivo .jar
            scp ./target/accounting.jar ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/app/accounting.jar
            # Reiniciar el servicio
            sudo systemctl start accounting-service
